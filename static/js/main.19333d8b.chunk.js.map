{"version":3,"sources":["store/weatherSlice.js","components/citySelector.tsx","components/showWeather.tsx","pages/home/index.js","pages/home/home.tsx","components/showHistory.tsx","pages/history/index.js","pages/history/history.tsx","components/topMenu.tsx","App.tsx","store/store.tsx","index.tsx"],"names":["fetchWeatherThunk","createAsyncThunk","city","a","rejectWithValue","fetch","response","ok","json","data","processedData","list","reduce","acc","item","concat","id","nanoid","temp","main","description","weather","date","dt_txt","error","message","weatherSlice","createSlice","name","initialState","status","history","extraReducers","pending","state","action","fulfilled","payload","unshift","rejected","getWeather","getHistory","getStatus","Option","Select","CitySelector","dispatch","useDispatch","useSelector","disabled","className","showSearch","style","width","placeholder","optionFilterProp","onChange","value","filterOption","input","option","children","toLowerCase","indexOf","ShowWeather","map","Home","ShowHistory","History","useHistory","mode","Item","onClick","push","App","exact","path","render","to","configureStore","reducer","devTools","process","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.19333d8b.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, nanoid } from '@reduxjs/toolkit'\n\nconst initialState = {\n  data: [],\n  status: \"idle\", \n  error: null,\n  history:[],\n}\n\nconst fetchWeatherThunk = createAsyncThunk('weatherSlice/fetchWeather', async (city,{ rejectWithValue }) => {\n  try {\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?appid=ce1fe59a97e1d3ca691fd2a7a7a2db8a&q=${city}&units=metric&lang=ru`)\n  if (response.ok) {\n      const data = await response.json()\n      const processedData = data.list.reduce((acc, item) =>{\n        return acc.concat({id:nanoid(),temp:item.main.temp,description:item.weather[0].description,date:item.dt_txt})\n    },[])\n    \n    return {data:processedData,city}\n    \n  }  \n  } catch(e) {\n    return rejectWithValue({error:e.message,city})\n  }\n});\n\n\nexport const weatherSlice = createSlice({\n  name: 'weatherSlice',\n  initialState,\n  \n  extraReducers: {\n  \n    [fetchWeatherThunk.pending]: (state, action) => {\n      state.status = 'pending'\n    },\n    [fetchWeatherThunk.fulfilled]: (state, action) => {\n      state.status = \"idle\"\n      state.data = action.payload.data\n      state.history.unshift({history:action.payload.city,id:nanoid()})\n    },\n    [fetchWeatherThunk.rejected]: (state, action) => {\n      state.data=[]\n      state.status = 'failed'\n      state.history.unshift({history:action.payload.city,id:nanoid()})\n      state.error = action.payload.error\n    },\n\n  },\n});\n\nexport const getWeather = (state) => state.weatherSlice.data\nexport const getHistory = (state) => state.weatherSlice.history\nexport const getStatus = (state) => state.weatherSlice.status\nexport const fetchWeather = (args) => fetchWeatherThunk(args)\nexport default weatherSlice.reducer;\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport {useDispatch,useSelector} from 'react-redux'\nimport {fetchWeather, getStatus } from '../store/weatherSlice'\n\nconst { Option } = Select;\n\nexport default function CitySelector() {\n  const dispatch = useDispatch()\n  const status = useSelector(getStatus)\n  return (\n    <Select\n      disabled={status === 'pending' ? true : false }\n      className=\"select\"\n      showSearch\n      style={{ width: 200 }}\n      placeholder=\"Select city\"\n      optionFilterProp=\"children\"\n      onChange={(value) => dispatch(fetchWeather(value))}\n      filterOption={(input, option) =>\n        option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      <Option value=\"moscow\">Moscow</Option>\n      <Option value=\"yekaterinburg\">Yekaterinburg</Option>\n      <Option value=\"novosibirsk\">Novosibirsk</Option>\n      <Option value=\"kazan\">Kazan</Option>\n    </Select>\n  );\n}\n","import React from 'react';\nimport {Space} from 'antd'\nexport interface WeatherItem {\n    id: string;\n    date: string;\n    temp: number;\n    description:string; \n}\n\nexport interface ShowWeatherProps {\n  list: WeatherItem[]\n}\n\n const ShowWeather: React.FC<ShowWeatherProps> = ({list}) => {\n    return (\n      <div>\n        {list.map((item)=>\n        <div key={item.id} className=\"weather-item\">\n          <Space>\n            <div className=\"date\">{item.date}</div>\n            <div className=\"temp\">{item.temp}</div>\n            <div className=\"description\">{item.description}</div>\n          </Space>\n        </div>\n        )}\n      </div>\n    )\n}\n\nexport default ShowWeather","import Home from './home'\n\nexport default Home","import React from \"react\";\nimport \"./home.scss\";\nimport CitySelector from '../../components/citySelector'\nimport ShowWeather from '../../components/showWeather'\nimport {useSelector} from 'react-redux'\nimport { getWeather } from '../../store/weatherSlice'\n\nexport default function Home() {\n  const list = useSelector(getWeather)\n  return (\n    <div className=\"page\">\n          <CitySelector/>\n          <ShowWeather list={list}/>\n    </div>\n  );\n}\n ","import React from 'react';\nexport interface HistoryItem {\n    id: string;\n    history: string;\n}\n\nexport interface ShowHistoryProps {\n  list: HistoryItem[]\n}\n\n const ShowHistory: React.FC<ShowHistoryProps> = ({list}) => {\n    return (\n      <div>\n        {list.map((item)=>\n        <div key={item.id} className=\"weather-item\">\n          {item.history}\n        </div>\n        )}\n      </div>\n    )\n}\n\nexport default ShowHistory","import History from './history.tsx'\nexport default History ","import React from \"react\";\nimport \"./history.scss\";\nimport ShowHistory from '../../components/showHistory'\nimport {useSelector} from 'react-redux'\nimport {getHistory} from '../../store/weatherSlice'\n\nexport default function Home() {\n  const list = useSelector(getHistory)\n  return (\n    <div className=\"page\">\n          <ShowHistory list={list}/>\n    </div>\n  );\n}\n ","import React from 'react';\nimport { Menu } from 'antd';\nimport { useHistory } from 'react-router-dom'\n\nexport default function ShowWeather(){\n\n    let history = useHistory();\n    \n    return (\n      <Menu className=\"menu\" mode=\"horizontal\">\n        <Menu.Item onClick = {()=>history.push('/home')} key=\"mail\">\n          Home\n        </Menu.Item>\n        <Menu.Item onClick = {()=>history.push('/history')} key=\"app\" >\n          History\n        </Menu.Item>\n      </Menu>\n    );\n  \n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\nimport './App.css';\n\nimport Home from './pages/home'\nimport History from './pages/history'\nimport ShowWeather from './components/topMenu'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n       <Router>\n       <ShowWeather/>\n        <Switch>\n          <Route exact path=\"/home\" render={() => <Home />} />\n          <Route path=\"/history\" render={() => <History />} />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore  } from '@reduxjs/toolkit';\nimport weatherSlice from './weatherSlice';\n\nexport default configureStore({\n  reducer: {\n    weatherSlice,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider> ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}